{"version":3,"file":"bundle.js","sources":["../src/4.类.ts"],"sourcesContent":["// 类：类的组成：构造函数、属性(实例属性、原型属性、静态属性)、方法(实例方法、原型方法、静态方法)、访问器(getter、setter)、静态相关的配置\r\n\r\nclass Circle {\r\n  // 给类声明属性\r\n  public x: number\r\n  public y: number\r\n  public fn: () => void\r\n  constructor(x: number ,y: number) {\r\n    this.x = x\r\n    this.y = y\r\n    this.fn = () => {}\r\n  }\r\n}\r\nnew Circle(100, 100)\r\n// 类的修饰符\r\n// public 公开属性，类的实例外部/类的内部/继承的子类都可以访问属性\r\n// protected(自己和儿子能访问，外部无法访问)\r\n// private (私有的，自己能访问)\r\n\r\nclass Animal {\r\n  constructor(public readonly name: string) { // 等价于声明了属性的类型, 给属性添加了public\r\n    // this.name = name // 加了 public后 这里不用写了\r\n  }\r\n}\r\nclass Cat extends Animal {\r\n  constructor(name: string, public age: number) {\r\n    super(name) // Animal.call(this)\r\n    // this.age = age\r\n  }\r\n}\r\nconst tom = new Cat('tom', 12)\r\n\r\nexport {}"],"names":[],"mappings":";;;EAAA;EAcA;EACA;EACA;EACA;EAEA,MAAM,MAAM,CAAA;EACV,IAAA,WAAA,CAA4B,IAAY,EAAA;UAAZ,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAQ;;OAEvC;EACF,CAAA;EACD,MAAM,GAAI,SAAQ,MAAM,CAAA;MACtB,WAAY,CAAA,IAAY,EAAS,GAAW,EAAA;EAC1C,QAAA,KAAK,CAAC,IAAI,CAAC,CAAA;UADoB,IAAG,CAAA,GAAA,GAAH,GAAG,CAAQ;;OAG3C;EACF,CAAA;EACW,IAAI,GAAG,CAAC,KAAK,EAAE,EAAE;;;;;;"}